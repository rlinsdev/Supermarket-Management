@page "/editcategory/{categoryId}"

@inject NavigationManager NavigationManager
@inject IAddCategoryUseCase AddCategoryUseCase
@inject IGetCategoryByIdUseCase GetCategoryById
@inject IEditCategoryUseCase EditCategoryUseCase

<h3>Edit Category</h3>

@if (category != null)
{
    <EditForm Model="category" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Name</label>
            <input type="text" id="name" @bind-value="category.Name" class="form-control" />
        </div>
        <div class="form-group">
            <label for="name">Descricao</label>
            <input type="text" id="descricao" @bind-value="category.Description" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string CategoryId { get; set; }

    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        //category = new Category();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        int categoryId = 0;
        int.TryParse(this.CategoryId, out categoryId);
        if (categoryId != 0)
            this.category = GetCategoryById.Execute(categoryId);            
    }

    private void OnValidSubmit()
    {
        EditCategoryUseCase.Execute(category);
        NavigationManager.NavigateTo("/categories");
    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }
}